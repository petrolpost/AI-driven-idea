# "AI辅助从技术文章分析到工具项目开发"项目规则 v2.0

> 本规则文档定义了基于AI Agent协作的Idea项目生成和管理标准，明确人机协作的工作规则和最佳实践。
>
> **术语定义**：
>
> - `本项目`：指"AI辅助从技术文章分析到工具项目开发"整体系统
> - `Idea项目`：指从技术文章分析得出的具体工具项目

---

## 📖 一、项目架构与核心理念

### 🏗️ 系统架构思路

**核心理念**：构建AI+人+系统的三位一体协作模式，实现从技术文章到实用工具的高效转化。

**架构组成**：

- 🤖 **AI Agent层**：智能分析、评估和建议
- 👤 **人类决策层**：创意判断、优先级决策、质量控制
- 🔧 **技术支撑层**：MCP工具、Web界面、数据库管理

**价值主张**：

- ⚡ **效率革命**：从手动文档管理到AI辅助的自动化系统
- 🎯 **质量保证**：标准化的评估体系确保项目价值
- 🔄 **持续优化**：基于实践的规则持续迭代完善

### 🤖 AI协作模式

**AI Agent职责**：

- 📖 深度分析技术文章，提取核心价值点和关键信息
- 🔍 基于评估标准客观评估Idea成熟度和可行性
- 📊 提供全面的数据分析和决策建议
- 🛠️ 自动化项目记录的创建、更新和管理
- 🔄 根据人类目标执行规则分析和优化方案

**人类职责**：

- 🎯 基于AI建议做出方向性决策和战略选择
- 💡 进行最终的创意判断和价值评估
- 📋 设定优先级和资源分配策略
- 📝 质量控制和标准制定
- 🎯 提出规则优化目标和改进方向

**协作原则**：

- **分析建议**：AI提供全面分析，人类做方向性决策
- **规则优化**：人类提出目标，AI负责分析执行
- **质量保证**：标准化流程，个性化判断
- **持续改进**：数据驱动，经验指导

---

## 🤖 二、AI协作工作规则

### 🔍 Idea识别与评估标准

#### 成熟度三级评估体系

**🟢 高成熟度（可直接开发）**

- ✅ 具体评估维度（≥2个维度）
- ✅ 量化指标定义（≥3个指标）
- ✅ 明确规则算法和处理逻辑
- ✅ 清晰的输入输出关系
- **AI建议**：直接推荐开发，评估资源需求

**🟡 中等成熟度（需深入研究）**

- ✅ 完整的概念框架或理论体系
- ❓ 缺乏具体实现细节
- ❓ 工具机会需要进一步挖掘
- ✅ 价值方向明确
- **AI建议**：深入研究，寻找具体化机会

**🔴 低成熟度（仅做归档）**

- ❓ 仅有抽象概念描述
- ❌ 无明确实现路径
- ❌ 缺乏具体应用场景
- ❌ 工具价值不明确
- **AI建议**：理论归档，定期回顾

#### Idea项目类型分类

- 🔧 **工具类**：提升开发效率的实用工具
- 📊 **分析类**：数据分析、决策支持系统
- 🤖 **AI应用**：基于AI技术的智能应用
- 🌐 **Web服务**：提供在线服务的Web应用
- 📚 **框架类**：可复用的开发框架或库
- 📦 **其他类**：未列出的其他应用工具

### 🎯 AI Agent行为准则

#### 分析阶段行为标准

- 📖 **深度理解**：分析文章核心观点、技术原理、应用场景
- 💡 **价值识别**：识别具有实用价值的概念、算法、方法
- 🚀 **可行性评估**：判断技术方案的实用性和实现难度
- 📋 **结构化输出**：使用标准模板提供分析结果

#### 评估阶段行为标准

- 🔍 **客观评估**：基于标准严格评估成熟度等级
- 📊 **数据支撑**：提供量化的评估依据和建议
- ⚡ **效率优先**：避免过度分析，聚焦核心要素
- 🎯 **决策支持**：提供明确的下一步行动建议

#### 管理阶段行为标准

- 📝 **自动记录**：通过MCP工具自动创建项目记录
- 🔄 **状态跟踪**：及时更新项目状态和进展
- 📊 **数据维护**：确保项目信息的准确性和完整性
- 🔍 **智能检索**：支持自然语言的项目查询和分析

### 🤝 人机协作最佳实践

#### 工作流程标准

```mermaid
graph LR
    A[📖 技术文章] --> B[🤖 AI分析提取]
    B --> C[📋 生成Idea卡片]  
    C --> D[👤 人类评估决策]
    D --> E[📊 MCP记录管理]
    E --> F[🔄 持续跟踪优化]
```

#### 协作检查清单

**分析阶段**：

- [ ] AI是否提供了结构化的Idea卡片？
- [ ] 成熟度评估是否有充分依据？
- [ ] 是否明确了下一步行动建议？

**决策阶段**：

- [ ] 人类是否基于AI建议做出了明确决策？
- [ ] 优先级设定是否合理？
- [ ] 资源评估是否现实可行？

**管理阶段**：

- [ ] 项目记录是否完整准确？
- [ ] 状态更新是否及时？
- [ ] 关键信息是否便于检索？

---

## 🏗️ 三、项目组织与管理规范

### 📁 目录结构标准

```
本项目根目录/
├── .trae/rules/               # 规则文件
├── navigator/                 # 后端API服务
├── mcp_tool/                  # MCP工具包  
├── ideaed-projects/           # 所有Idea项目容器
│   ├── project-navigator-web/ # Web管理界面
│   └── [idea-project-name]/   # 具体Idea项目
│       ├── README.md          # 项目说明（必需）
│       ├── idea-analysis.md   # 理念分析（可选）
│       └── [其他项目文件]     # 根据需要添加
└── docs/                      # 全局文档
```

### 📝 项目记录管理

#### 数据模型标准

```python
class Project:
    id: int                    # 唯一标识
    name: str                  # 项目名称  
    project_type: str          # 项目类型
    maturity: str              # 成熟度等级
    status: str                # 当前状态
    description: str           # 项目描述
    readme_path: str           # README路径
    created_date: str          # 创建日期
```

#### 状态管理规则

- 📋 **规划中**：高成熟度Idea，已确定开发
- 🔍 **研究中**：中等成熟度Idea，正在深入研究
- ✅ **已完成**：工具开发完成，功能稳定
- 📚 **已归档**：低成熟度Idea，作为知识资产保存

#### MCP工具操作标准

- `add_project`：创建新项目记录
- `list_projects`：查看项目列表（支持筛选）
- `search_projects`：关键词搜索项目
- `get_project`：获取项目详情
- `update_project_status`：更新项目状态

### 🎯 质量控制要求

#### 项目质量标准

- ✅ **价值明确**：解决实际问题，具有明确用户价值
- ✅ **描述清晰**：README文档完整，易于理解
- ✅ **分类准确**：项目类型和成熟度评估准确
- ✅ **状态实时**：项目状态反映真实进展

#### 文档质量标准

- 📖 **README必需**：每个Idea项目必须有README.md
- 🎯 **内容完整**：包含项目背景、目标、特性、使用方法
- 💡 **价值突出**：明确说明项目解决的问题和创新点
- 🔗 **引用规范**：正确引用来源文章和相关资源

---

## 📋 四、实用工具与模板

### 📝 标准化模板

#### Idea提取卡片模板

```markdown
## Idea提取卡片

### 基本信息
- **Idea名称**：[简洁准确的描述]
- **来源文章**：[文章标题和链接]  
- **文章领域**：[IT/管理/法律/政策等]
- **提取日期**：[YYYY-MM-DD]

### 核心内容
- **核心概念**：[关键理论或方法论]
- **主要维度**：[评估维度，如有]
- **关键指标**：[具体指标，如有]  
- **输入输出**：[输入输出关系，如有]

### 成熟度评估
- **成熟度等级**：[🟢高/🟡中/🔴低]
- **判断依据**：[基于哪些标准判断]
- **缺失要素**：[如需补充的要素]

### 处理决策  
- **下一步行动**：[开发/研究/归档]
- **预估投入**：[时间和资源估算]
- **优先级**：[高/中/低]
- **利益相关人**：[目标用户/行业/职业]
```

#### 快速决策卡片模板

```markdown
## 快速决策卡片

### 基本信息
- **Idea名称**：[名称]
- **成熟度**：[🟢/🟡/🔴]
- **来源**：[文章链接]

### 决策要素
- **开发资源**：[充足/有限/不足]
- **业务价值**：[高/中/低]  
- **技术难度**：[简单/中等/复杂]

### 决策结果
- **行动**：[开发/研究/归档]
- **优先级**：[高/中/低]
- **预计投入**：[时间估算]
```

### ✅ 检查清单

#### AI分析质量检查

- [ ] 是否提取了文章的核心技术价值？
- [ ] 成熟度评估是否有明确标准依据？
- [ ] 是否提供了具体的行动建议？
- [ ] 模板是否填写完整准确？

#### 人类决策质量检查

- [ ] 是否基于客观标准进行评估？
- [ ] 优先级设定是否考虑了资源约束？
- [ ] 决策是否具有可执行性？
- [ ] 是否记录了决策的关键依据？

#### 项目管理质量检查

- [ ] 项目记录是否及时创建？
- [ ] 信息是否完整准确？
- [ ] 状态更新是否及时？
- [ ] 文档是否符合质量标准？

### 🔄 规则更新机制

#### 更新触发条件

- 实践中发现的规则缺陷
- AI协作效果的改进需求
- 项目类型和复杂度的变化
- 用户反馈和建议

#### 更新流程

1. **问题识别**：记录规则使用中的问题
2. **分析评估**：分析问题原因和影响范围
3. **方案设计**：设计规则优化方案
4. **试验验证**：小范围试验新规则效果
5. **正式更新**：更新规则文档和相关系统

---

## 📈 规则更新日志

### v2.0.0 (2025-07-10)

- 🏗️ **架构重构**：基于AI协作理念重新组织规则结构
- 🤖 **突出AI协作**：明确AI Agent和人类的职责分工
- 📋 **简化内容**：去除冗余的技术开发细节
- 🎯 **聚焦规则**：强调规则标准而非操作流程
- 💡 **突出价值**：清晰阐述本项目的架构思路和核心理念

### v1.3.0 (2025-07-10)

- 🏗️ **架构革新**：从手动导航向MCP系统化管理转型
- 🤖 **MCP工具标准**：新增FastMCP框架标准
- 📊 **自动化管理**：实现项目记录的自动化CRUD操作
- 🌐 **可视化界面**：Web界面提供项目管理功能

---

*本规则文档服务于AI Agent和人类的协作，将根据实践经验持续优化完善。*

*维护者：AI辅助项目开发团队*
*最后更新：2025-01-28 (v2.0 AI协作优化版)*
